{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"KAVEAdminUserName": {
			"type": "string",
			"minLength": 1,
			"metadata": {
				"description": "Username of the admin user"
			}
		},
		"KAVEAdminPassword": {
			"type": "securestring",
			"metadata": {
				"description": "Password of the admin user"
			}
		},
		"saName": {
			"type": "string",
			"metadata": {
				"description": "Unique name for the azure storage account wich will be used for regular storage"
			}
		},
		"saPremiumName": {
			"type": "string",
			"metadata": {
				"description": "Unique name for the azure storage account wich will be used for premium storage"
			}
		},
		"dnsLabelPrefix": {
			"type": "string",
			"metadata": {
				"description": "Unique DNS Name prefix for the Public IP used to access the Gateway."
			}
		},
		"AmbariNodeSize": {
			"type": "string",
			"defaultValue": "Standard_D2_v2"
		},
		"GatewayNodeSize": {
			"type": "string",
			"defaultValue": "Standard_D4_v2"
		},
		"CiNodeSize": {
			"type": "string",
			"defaultValue": "Standard_D2_v2"
		},
		"NnoNodeSize": {
			"type": "string",
			"defaultValue": "Standard_D4_v2"
		},
		"DataNodeSize": {
			"type": "string",
			"defaultValue": "Standard_DS4_v2"
		},
		"KAVENetworkPrefix": {
			"type": "string",
			"defaultValue": "10.0.0.0/16"
		},
		"KAVENetworkSubnet": {
			"type": "string",
			"defaultValue": "10.0.0.0/24"
		},
		"KAVECentOSVersion": {
			"type": "string",
			"defaultValue": "6.5",
			"allowedValues": [
				"6.5"
			]
		}
	},
	"variables": {
		"location": "[resourceGroup().location]",
		"apiVersionStorage": "2016-01-01",
		"apiVersionNetwork": "2016-03-30",
		"apiVersionCompute": "2016-03-30",
		"KAVEnetworkSubnet1Name": "Subnet-1",
		"KAVEnetworkSubnet1Prefix": "[parameters('KAVENetworkSubnet')]",
		"KAVEImagePublisher": "OpenLogic",
		"KAVEImageOffer": "CentOS",
	        "Comment1": "If you change the node modify the \"nodes\" variable below too",
                "AmbariNodeName": "ambari",
                "GatewayNodeName": "gate",
                "CiNodeName": "ci",
                "NnoNodeName": "nno",
                "DataNodeName": "data",
                "NnoNodeCount": 2,
                "DataNodeCount": 3,
		"AmbariNodeDiskName": "[variables('AmbariNodeName')]",
		"AmbariNicName": "[concat(variables('AmbariNodeName'), 'NiC')]",
		"GatewayNicName": "[concat(variables('GatewayNodeName'), 'NiC')]",
		"CiNicName": "[concat(variables('CiNodeName'), 'NiC')]",
		"NnoNicName": "[concat(variables('NnoNodeName'), 'NiC')]",
		"DataNicName": "[concat(variables('DataNodeName'), 'NiC')]",
		"KAVEVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'KAVEnetwork')]",
		"KAVESubnetRef": "[concat(variables('KAVEVnetID'), '/subnets/', variables('KAVEnetworkSubnet1Name'))]",
		"publicNetworkSecurityGroupsName": "KAVEPublicSecurityGroup",
		"KAVEStorageAccountContainerName": "vhds",
		"KAVEStdStorageType": "Standard_LRS",
		"KAVEPrmStorageType": "Premium_LRS",
		"KAVEStdStorageKind": "Storage",
		"KAVEPrmStorageKind": "BlobStorage",
		"KAVEPrmStorageAccessTier": "Cool",
		"publicIPAddressName": "KAVEPublicIP",
		"publicIPAddressType": "Static",
		"extensionName": "/setup",
		"branchName": "popular_prep",
                "templateName": "tmpl-hdp-with-ci",
		"contentHost": "raw.githubusercontent.com",
		"mainHost": "github.com",
		"pathURI": "/KaveIO/AmbariKave-azure-templates/",
		"baseContentURI": "[concat('https://',variables('contentHost'),variables('pathURI'),variables('branchName'))]",
		"baseMainURI": "[concat('https://',variables('mainHost'),variables('pathURI'))]",
		"setupScriptsPath": "/automation/setup/",
		"anyNodeSetupScript": "anynode_setup.sh",
		"ambariNodeSetupScript": "ambarinode_setup.sh",
		"extraDiskNodeSetupScript": "extradisknode_setup.sh",
		"gatewaySetupScript": "gateway_setup.sh",
		"anyNodeSetupURI": "[concat(variables('baseContentURI'), variables('setupScriptsPath'), variables('anyNodeSetupScript'))]",
		"ambariNodeSetupURI": "[concat(variables('baseContentURI'), variables('setupScriptsPath'), variables('ambariNodeSetupScript'))]",
		"extraDiskNodeSetupURI": "[concat(variables('baseContentURI'), variables('setupScriptsPath'), variables('extraDiskNodeSetupScript'))]",
		"gatewaySetupURI": "[concat(variables('baseContentURI'), variables('setupScriptsPath'), variables('gatewaySetupScript'))]",
		"scriptInterpreter": "/bin/bash",
		"commandToExecuteAnyNode": "[concat(variables('scriptInterpreter'), ' ', variables('anyNodeSetupScript'))]",
		"commandToExecuteExtraDiskNode": "[concat(variables('scriptInterpreter'), ' ', variables('extraDiskNodeSetupScript'))]",
		"commandToExecuteAmbariNode": "[concat(variables('scriptInterpreter'), ' ', variables('ambariNodeSetupScript'))]",
		"commandToExecuteGateway": "[concat(variables('scriptInterpreter'), ' ', variables('gatewaySetupScript'))]",
		"kaveScriptsURI": "[concat(variables('baseMainURI'),'archive/',variables('branchName'),'.zip')]",
		"kaveBlueprint": "[concat(variables('baseContentURI'), '/', variables('templateName'), '/', 'blueprint.json')]",
		"kaveCluster": "[concat(variables('baseContentURI'), '/', variables('templateName'), '/', 'cluster.json')]",
		"nodes": "'ambari gate ci nno-0 nno-1 data-0 data-1 data-2'",
		"version": "2.0-Beta",
		"gateExtraDisk": "/dev/sdc",
		"dataNodeExtraDisk": "/dev/sdc",
		"gateMountPoint": "/data",
		"dataNodeMountPoint": "/hadoop"
	},
	"resources": [{
			"name": "[parameters('saName')]",
			"type": "Microsoft.Storage/storageAccounts",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"dependsOn": [],
			"tags": {
				"displayName": "saKAVE01"
			},
			"sku": {
				"name": "[variables('KAVEStdStorageType')]"
			},
			"kind": "[variables('KAVEStdStorageKind')]"
		}, {
			"name": "[parameters('saPremiumName')]",
			"type": "Microsoft.Storage/storageAccounts",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionStorage')]",
			"dependsOn": [],
			"properties": {
				"accessTier": "[variables('KAVEPrmStorageAccessTier')]"
			},
			"tags": {
				"displayName": "saKAVE01Premium"
			},
			"sku": {
				"name": "[variables('KAVEPrmStorageType')]"
			},
			"kind": "[variables('KAVEPrmStorageKind')]"
		}, {
			"name": "KAVEnetwork",
			"type": "Microsoft.Network/virtualNetworks",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"dependsOn": [],
			"tags": {
				"displayName": "KAVEnetwork"
			},
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[parameters('KAVENetworkPrefix')]"
					]
				},
				"subnets": [{
					"name": "[variables('KAVEnetworkSubnet1Name')]",
					"properties": {
						"addressPrefix": "[variables('KAVEnetworkSubnet1Prefix')]"
					}
				}]
			}
		}, {
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[variables('publicIPAddressName')]",
			"location": "[variables('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsLabelPrefix')]"
				}
			}
		}, {
			"name": "[variables('AmbariNicName')]",
			"type": "Microsoft.Network/networkInterfaces",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', 'KAVEnetwork')]"
			],
			"tags": {
				"displayName": "[variables('AmbariNicName')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('KAVESubnetRef')]"
						}
					}
				}]
			}
		}, {
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('GatewayNicName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', 'KAVEnetwork')]",
				"[concat('Microsoft.Network/virtualNetworks/', 'KAVEnetwork')]",
				"[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicNetworkSecurityGroupsName'))]"
			],
			"tags": {
				"displayName": "[variables('GatewayNicName')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"publicIPAddress": {
							"id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
						},
						"subnet": {
							"id": "[variables('KAVESubnetRef')]"
						}
					}
				}],
				"networkSecurityGroup": {
					"id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('publicNetworkSecurityGroupsName'))]"
				}
			}
		}, {
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[variables('CiNicName')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', 'KAVEnetwork')]"
			],
			"tags": {
				"displayName": "[variables('CiNicName')]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('KAVESubnetRef')]"
						}
					}
				}]
			}
		}, {
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('NnoNicName'),copyIndex())]",
			"location": "[variables('location')]",
			"copy": {
				"name": "NnoNicLoop",
				"count": "[variables('NnoNodeCont')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', 'KAVEnetwork')]"
			],
			"tags": {
				"displayName": "[concat(variables('NnoNicName'),copyIndex())]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('KAVESubnetRef')]"
						}
					}
				}]
			}
		}, {
			"apiVersion": "[variables('apiVersionNetwork')]",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(variables('DataNicName'), copyIndex())]",
			"location": "[variables('location')]",
			"copy": {
				"name": "DataNicLoop",
				"count": "[variables('DataNodeCount')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', 'KAVEnetwork')]"
			],
			"tags": {
				"displayName": "[concat(variables('DataNicName'),copyIndex())]"
			},
			"properties": {
				"ipConfigurations": [{
					"name": "ipconfig1",
					"properties": {
						"privateIPAllocationMethod": "Dynamic",
						"subnet": {
							"id": "[variables('KAVESubnetRef')]"
						}
					}

				}]
			}
		},

		{
			"type": "Microsoft.Network/networkSecurityGroups",
			"name": "[variables('publicNetworkSecurityGroupsName')]",
			"apiVersion": "[variables('apiVersionNetwork')]",
			"location": "[variables('location')]",
			"properties": {
					"securityRules": [{
						"name": "SSH",
						"properties": {
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 100,
							"direction": "Inbound"
						}
					}, {
						"name": "VNC",
						"properties": {
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "5900-5999",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 101,
							"direction": "Inbound"
						}
					}]
			},
			"dependsOn": []
		},{
		"apiVersion": "[variables('apiVersionCompute')]",
		"name": "[variables('GatewayNodeName')]",
		"type": "Microsoft.Compute/virtualMachines",
		"location": "[variables('location')]",
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', parameters('saName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('GatewayNicName'))]"
		],
		"tags": {
			"displayName": "[variables('GatewayNodeName')]"
		},
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('GatewayNodeSize')]"
			},
			"osProfile": {
				"computerName": "[variables('GatewayNodeName')]",
				"adminUsername": "[parameters('KAVEAdminUsername')]",
				"adminPassword": "[parameters('KAVEAdminPassword')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('KAVEImagePublisher')]",
					"offer": "[variables('KAVEImageOffer')]",
					"sku": "[parameters('KAVECentOSVersion')]",
					"version": "latest"
				},
			    "dataDisks": [{
					"name": "[concat(variables('GatewayNodeName'),'disk1')]",
					"diskSizeGB": "500",
					"lun": 0,
					"vhd": {
						"uri": "[concat('http://', parameters('saName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('GatewayNodeName'), 'disk1', '.vhd')]"
					},
					"createOption": "Empty"
			    }],
				"osDisk": {
					"name": "[concat(variables('GatewayNodeName'),'OSDisk')]",
					"vhd": {
						"uri": "[concat('http://', parameters('saName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('GatewayNodeName'),'OSDisk', '.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('GatewayNicName'))]"
				}]
			}
		}
		},{
		"apiVersion": "[variables('apiVersionCompute')]",
		"name": "[parameters('CiNodeName')]",
		"type": "Microsoft.Compute/virtualMachines",
		"location": "[variables('location')]",
		"dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', parameters('saName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('CiNicName'))]"
		],
		"tags": {
			"displayName": "[variables('CiNodeName')]"
		},
		"properties": {
			"hardwareProfile": {
				"vmSize": "[parameters('CiNodeSize')]"
			},
			"osProfile": {
				"computerName": "[variables('CiNodeName')]",
				"adminUsername": "[parameters('KAVEAdminUsername')]",
				"adminPassword": "[parameters('KAVEAdminPassword')]"
			},
			"storageProfile": {
				"imageReference": {
					"publisher": "[variables('KAVEImagePublisher')]",
					"offer": "[variables('KAVEImageOffer')]",
					"sku": "[parameters('KAVECentOSVersion')]",
					"version": "latest"
				},
				"osDisk": {
					"name": "[concat(variables('CiNodeName'), 'OSDisk')]",
					"vhd": {
						"uri": "[concat('http://', parameters('saName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('CiNodeName'), 'OSDisk', '.vhd')]"
					},
					"caching": "ReadWrite",
					"createOption": "FromImage"
				}
			},
			"networkProfile": {
				"networkInterfaces": [{
					"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('CiNicName'))]"
				}]
			}
		}
	}
, {
			"apiVersion": "[variables('apiVersionCompute')]",
			"name": "[concat(variables('NnoNodeName'),'-',copyIndex())]",
			"type": "Microsoft.Compute/virtualMachines",
			"location": "[variables('location')]",
			"copy": {
				"name": "NnoMachineLoop",
				"count": "[variables('NnoNodeCount')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', parameters('saName'))]",
				"NnoNicLoop"
			],
			"tags": {
				"displayName": "[concat(variables('NnoNodeName'),'-',copyIndex())]"
			},
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('NnoNodeSize')]"
				},
				"osProfile": {
					"computerName": "[concat(variables('NnoNodeName'),'-',copyIndex())]",
					"adminUsername": "[parameters('KAVEAdminUsername')]",
					"adminPassword": "[parameters('KAVEAdminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('KAVEImagePublisher')]",
						"offer": "[variables('KAVEImageOffer')]",
						"sku": "[parameters('KAVECentOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('NnoNodeName'),copyIndex(), 'OSDisk')]",
						"vhd": {
							"uri": "[concat('http://', parameters('saName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('NnoNodeName'),copyIndex(), 'OSDisk', '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('NnoNicName'),copyIndex()))]"
					}]
				}
			}
		}, {
			"apiVersion": "[variables('apiVersionCompute')]",
			"name": "[concat(variables('DataNodeName'),'-',copyIndex())]",
			"type": "Microsoft.Compute/virtualMachines",
			"location": "[variables('location')]",
			"copy": {
				"name": "DataMachineLoop",
				"count": "[variables('DataNodeCount')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', parameters('saName'))]",
				"[concat('Microsoft.Storage/storageAccounts/', parameters('saPremiumName'))]",
				"DataNicLoop"
			],
			"tags": {
				"displayName": "[concat(variables('DataNodeName'),'-',copyIndex())]"
			},
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('DataNodeSize')]"
				},
				"osProfile": {
					"computerName": "[concat(variables('DataNodeName'),'-',copyIndex())]",
					"adminUsername": "[parameters('KAVEAdminUsername')]",
					"adminPassword": "[parameters('KAVEAdminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('KAVEImagePublisher')]",
						"offer": "[variables('KAVEImageOffer')]",
						"sku": "[parameters('KAVECentOSVersion')]",
						"version": "latest"
					},
					"dataDisks": [{
						"name": "[concat(variables('DataNodeName'),copyIndex(),'disk1')]",
						"diskSizeGB": "1000",
						"lun": 0,
						"vhd": {
							"uri": "[concat('http://', parameters('saPremiumName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('DataNodeName'), copyIndex(), 'disk1', '.vhd')]"
						},
						"createOption": "Empty"
					}],
					"osDisk": {
						"name": "[concat(variables('DataNodeName'),copyIndex(), 'OSDisk')]",
						"vhd": {
							"uri": "[concat('http://', parameters('saName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('DataNodeName'),copyIndex(), 'OSDisk', '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('DataNicName'),copyIndex()))]"
					}]
				}
			}
		}, {
			"name": "[variables('AmbariNodeName')]",
			"type": "Microsoft.Compute/virtualMachines",
			"location": "[variables('location')]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"dependsOn": [
				"[concat('Microsoft.Storage/storageAccounts/', parameters('saName'))]",
				"[concat('Microsoft.Network/networkInterfaces/', variables('AmbariNicName'))]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('GatewayNodeName'))]",
				"[concat('Microsoft.Compute/virtualMachines/', variables('CiNodeName'))]",
				"NnoMachineLoop",
				"DataMachineLoop",
				"NnoMachineLoop"
			],
			"tags": {
				"displayName": "[variables('AmbariNodeName')]"
			},
			"properties": {
				"hardwareProfile": {
					"vmSize": "[parameters('AmbariNodeSize')]"
				},
				"osProfile": {
					"computerName": "[variables('AmbariNodeName')]",
					"adminUsername": "[parameters('KAVEAdminUsername')]",
					"adminPassword": "[parameters('KAVEAdminPassword')]"
				},
				"storageProfile": {
					"imageReference": {
						"publisher": "[variables('KAVEImagePublisher')]",
						"offer": "[variables('KAVEImageOffer')]",
						"sku": "[parameters('KAVECentOSVersion')]",
						"version": "latest"
					},
					"osDisk": {
						"name": "[concat(variables('AmbariNodeName'), 'OSDisk')]",
						"vhd": {
							"uri": "[concat('http://', parameters('saName'), '.blob.core.windows.net/', variables('KAVEStorageAccountContainerName'), '/', variables('AmbariNodeName'), 'OSDisk', '.vhd')]"
						},
						"caching": "ReadWrite",
						"createOption": "FromImage"
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('AmbariNicName'))]"
					}]
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('AmbariNodeName'), variables('extensionName'))]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('AmbariNodeName'))]"
			],
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
					"fileUris": "[split(concat(variables('anyNodeSetupURI'),' ',variables('ambariNodeSetupURI')), ' ')]"
				},
				"protectedSettings": {
					"commandToExecute": "[concat(variables('commandToExecuteAmbariNode'),' ',variables('kaveScriptsURI'),' ',parameters('KAVEAdminUserName'),' ',parameters('KAVEAdminPassword'),' ',variables('nodes'),' ',variables('version'),' ',variables('kaveBlueprint'),' ',variables('kaveCluster'))]"
				}

			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('GatewayNodeName'), variables('extensionName'))]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('GatewayNodeName'))]"
			],
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
					"fileUris": "[split(concat(variables('extraDiskNodeSetupURI'),' ',variables('gatewaySetupURI'),' ',variables('anyNodeSetupURI')), ' ')]"
				},
				"protectedSettings": {
					"commandToExecute": "[concat(variables('commandToExecuteGateway'),' ',variables('kaveScriptsURI'),' ',parameters('KAVEAdminUserName'),' ',parameters('KAVEAdminPassword'),' ',variables('gateExtraDisk'),' ',variables('gateMountPoint'))]"
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('DataNodeName'),'-',copyIndex(),variables('extensionName'))]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"location": "[variables('location')]",
			"copy": {
				"name": "DataMachineScriptLoop",
				"count": "[variables('DataNodeCount')]"
			},
			"dependsOn": [
				"DataMachineLoop"
			],
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
					"fileUris": "[split(concat(variables('anyNodeSetupURI'),' ',variables('extraDiskNodeSetupURI')), ' ')]"
				},
				"protectedSettings": {
					"commandToExecute": "[concat(variables('commandToExecuteExtraDiskNode'),' ',variables('kaveScriptsURI'),' ',parameters('KAVEAdminUserName'),' ',parameters('KAVEAdminPassword'),' ',variables('dataNodeExtraDisk'),' ',variables('dataNodeMountPoint'))]"
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('NnoNodeName'),'-',copyIndex(),variables('extensionName'))]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"location": "[variables('location')]",
			"copy": {
				"name": "NnoMachineScriptLoop",
				"count": "[variables('NnoNodeCount')]"
			},
			"dependsOn": [
				"NnoMachineLoop"
			],
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
					"fileUris": "[split(variables('anyNodeSetupURI'), ' ')]"
				},
				"protectedSettings": {
					"commandToExecute": "[concat(variables('commandToExecuteAnyNode'),' ',variables('kaveScriptsURI'),' ',parameters('KAVEAdminUserName'),' ',parameters('KAVEAdminPassword'))]"
				}
			}
		}, {
			"type": "Microsoft.Compute/virtualMachines/extensions",
			"name": "[concat(variables('CiNodeName'), variables('extensionName'))]",
			"apiVersion": "[variables('apiVersionCompute')]",
			"location": "[variables('location')]",
			"dependsOn": [
				"[concat('Microsoft.Compute/virtualMachines/', variables('CiNodeName'))]"
			],
			"properties": {
				"publisher": "Microsoft.OSTCExtensions",
				"type": "CustomScriptForLinux",
				"typeHandlerVersion": "1.4",
				"settings": {
					"fileUris": "[split(variables('anyNodeSetupURI'), ' ')]"
				},
				"protectedSettings": {
					"commandToExecute": "[concat(variables('commandToExecuteAnyNode'),' ',variables('kaveScriptsURI'),' ',parameters('KAVEAdminUserName'),' ',parameters('KAVEAdminPassword'))]"
				}
			}
		}
	],
	"outputs": {
		"fqdn": {
			"value": "[reference(resourceId('Microsoft.Network/publicIPAddresses','KAVEPublicIP')).dnsSettings.fqdn]",
			"type": "string"
		}
	}

}
